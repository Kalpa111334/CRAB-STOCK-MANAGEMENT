import React, { useRef } from 'react'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog'
import { Eye, Download, Share2, X, Package, Truck, Calendar, DollarSign } from 'lucide-react'
import { Purchase } from '@/types/database'
import { format } from 'date-fns'
import html2canvas from 'html2canvas'

interface PurchaseOrderPreviewProps {
  purchase: Purchase
  isOpen: boolean
  onClose: () => void
}

export const PurchaseOrderPreview: React.FC<PurchaseOrderPreviewProps> = ({
  purchase,
  isOpen,
  onClose
}) => {
  const previewRef = useRef<HTMLDivElement>(null)

  const handleDownloadPNG = async () => {
    if (!previewRef.current) return

    try {
      const canvas = await html2canvas(previewRef.current, {
        backgroundColor: '#ffffff',
        scale: 2,
        useCORS: true,
        allowTaint: true
      })

      const link = document.createElement('a')
      link.download = `PurchaseOrder-${purchase.order_number}-${format(new Date(purchase.date), 'yyyy-MM-dd')}.png`
      link.href = canvas.toDataURL('image/png')
      link.click()
    } catch (error) {
      console.error('Error generating PNG:', error)
    }
  }

  const handleShareWhatsApp = async () => {
    try {
      // Generate a summary message for WhatsApp
      const items = purchase.items as any[]
      const firstItem = items?.[0] || {}
      
      let message = `ðŸ¦€ *Purchase Order Generated*\n\n`
      message += `ðŸ“‹ *Order Details*\n`
      message += `Order Number: ${purchase.order_number}\n`
      message += `Date: ${format(new Date(purchase.date), 'dd/MM/yyyy')}\n`
      message += `Supplier: ${purchase.supplier_name}\n`
      message += `Status: ${purchase.status}\n\n`
      
      if (items.length > 0) {
        message += `ðŸ“¦ *Items*\n`
        items.forEach((item, index) => {
          message += `${index + 1}. ${item.category}\n`
          message += `   Quantity: ${item.quantity_kg} kg\n`
          message += `   Pieces: ${item.pieces_count}\n`
          message += `   Unit Price: LKR ${item.unit_price}/kg\n`
          message += `   Total: LKR ${item.total_price}\n\n`
        })
      }
      
      message += `ðŸ’° *Total Amount: LKR ${purchase.total_amount}*\n\n`
      message += `ðŸ“± Generated by Crab Stock Management System`

      const whatsappUrl = `https://wa.me/?text=${encodeURIComponent(message)}`
      window.open(whatsappUrl, '_blank')
    } catch (error) {
      console.error('Error sharing on WhatsApp:', error)
    }
  }

  const items = purchase.items as any[] || []

  return (
    <Dialog open={isOpen} onOpenChange={onClose}>
      <DialogContent className="max-w-4xl max-h-[90vh] overflow-y-auto">
        <DialogHeader>
          <div className="flex items-center justify-between">
            <DialogTitle className="flex items-center gap-2">
              <Eye className="h-5 w-5" />
              Purchase Order Preview
            </DialogTitle>
            <Button variant="ghost" size="sm" onClick={onClose}>
              <X className="h-4 w-4" />
            </Button>
          </div>
        </DialogHeader>

        <div className="space-y-4">
          {/* Action Buttons */}
          <div className="flex gap-2 justify-end">
            <Button variant="outline" onClick={handleDownloadPNG}>
              <Download className="h-4 w-4 mr-2" />
              Download PNG
            </Button>
            <Button variant="outline" onClick={handleShareWhatsApp}>
              <Share2 className="h-4 w-4 mr-2" />
              Share on WhatsApp
            </Button>
          </div>

          {/* Purchase Order Preview */}
          <div ref={previewRef} className="bg-white p-6 rounded-lg border-2 border-gray-200">
            {/* Header */}
            <div className="text-center border-b-2 border-blue-600 pb-4 mb-6">
              <h1 className="text-3xl font-bold text-blue-600 mb-2">Purchase Order</h1>
              <p className="text-gray-600">Crab Stock Management System</p>
            </div>

            {/* Order Information */}
            <div className="grid grid-cols-2 gap-6 mb-6">
              <div>
                <h3 className="font-semibold text-gray-800 mb-2">Order Information</h3>
                <div className="space-y-1 text-sm">
                  <p><span className="font-medium">Order Number:</span> {purchase.order_number}</p>
                  <p><span className="font-medium">Date:</span> {format(new Date(purchase.date), 'dd/MM/yyyy')}</p>
                  <p><span className="font-medium">Delivery Date:</span> {format(new Date(purchase.delivery_date), 'dd/MM/yyyy')}</p>
                  <p><span className="font-medium">Status:</span> 
                    <Badge variant={purchase.status === 'completed' ? 'default' : 'secondary'} className="ml-2">
                      {purchase.status}
                    </Badge>
                  </p>
                </div>
              </div>
              
              <div>
                <h3 className="font-semibold text-gray-800 mb-2">Supplier Information</h3>
                <div className="space-y-1 text-sm">
                  <p><span className="font-medium">Supplier:</span> {purchase.supplier_name}</p>
                  <p><span className="font-medium">Currency:</span> {purchase.currency}</p>
                  <p><span className="font-medium">Payment Terms:</span> {purchase.payment_terms}</p>
                </div>
              </div>
            </div>

            {/* Items Table */}
            <div className="mb-6">
              <h3 className="font-semibold text-gray-800 mb-3">Order Items</h3>
              <div className="border border-gray-300 rounded-lg overflow-hidden">
                <table className="w-full">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Category</th>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Quantity (kg)</th>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Pieces</th>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Unit Price (per kg)</th>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Calculation</th>
                      <th className="px-4 py-3 text-left text-sm font-medium text-gray-700 border-b border-gray-300">Total Price</th>
                    </tr>
                  </thead>
                  <tbody>
                    {items.map((item, index) => (
                      <tr key={index} className={index % 2 === 0 ? 'bg-white' : 'bg-gray-50'}>
                        <td className="px-4 py-3 text-sm border-b border-gray-200">
                          <Badge variant="outline">{item.category}</Badge>
                        </td>
                        <td className="px-4 py-3 text-sm border-b border-gray-200">{item.quantity_kg} kg</td>
                        <td className="px-4 py-3 text-sm border-b border-gray-200">{item.pieces_count}</td>
                        <td className="px-4 py-3 text-sm border-b border-gray-200">LKR {item.unit_price}</td>
                        <td className="px-4 py-3 text-sm border-b border-gray-200 font-mono">
                          {item.quantity_kg} Ã— LKR {item.unit_price}
                        </td>
                        <td className="px-4 py-3 text-sm border-b border-gray-200 font-semibold">
                          LKR {item.total_price}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            </div>

            {/* Total Summary */}
            <div className="border-t-2 border-gray-300 pt-4">
              <div className="flex justify-between items-center">
                <div className="text-lg font-semibold text-gray-800">Total Amount:</div>
                <div className="text-2xl font-bold text-blue-600">LKR {purchase.total_amount}</div>
              </div>
            </div>

            {/* Footer */}
            <div className="mt-8 pt-4 border-t border-gray-200 text-center text-sm text-gray-500">
              <p>This purchase order was generated automatically by the Crab Stock Management System</p>
              <p>Generated on: {format(new Date(), 'dd/MM/yyyy HH:mm')}</p>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  )
}
